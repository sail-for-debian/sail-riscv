chapter \<open>Generated by Lem from \<open>handwritten_support/0.11/riscv_extras_fdext.lem\<close>.\<close>

theory "Riscv_extras_fdext" 

imports
  Main
  "LEM.Lem_pervasives"
  "LEM.Lem_pervasives_extra"
  "Sail.Sail2_instr_kinds"
  "Sail.Sail2_values"
  "Sail.Sail2_operators_mwords"
  "Sail.Sail2_prompt_monad"
  "Sail.Sail2_prompt"

begin 

\<comment> \<open>\<open>open import Pervasives\<close>\<close>
\<comment> \<open>\<open>open import Pervasives_extra\<close>\<close>
\<comment> \<open>\<open>open import Sail2_instr_kinds\<close>\<close>
\<comment> \<open>\<open>open import Sail2_values\<close>\<close>
\<comment> \<open>\<open>open import Sail2_operators_mwords\<close>\<close>
\<comment> \<open>\<open>open import Sail2_prompt_monad\<close>\<close>
\<comment> \<open>\<open>open import Sail2_prompt\<close>\<close>

type_synonym 'a bitvector0 =" ( 'a::len)Word.word "

\<comment> \<open>\<open> stub functions emulating the C softfloat interface \<close>\<close>

\<comment> \<open>\<open>val softfloat_f16_add : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_add  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_add _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f16_sub : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_sub  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_sub _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f16_mul : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_mul  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_mul _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f16_div : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_div  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_div _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_add : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_add  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_add _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_sub : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_sub  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_sub _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_mul : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_mul  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_mul _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_div : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_div  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_div _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_add : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_add  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_add _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_sub : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_sub  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_sub _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_mul : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_mul  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_mul _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_div : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_div  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_div _ _ _ = ( ()  )\<close>



\<comment> \<open>\<open>val softfloat_f16_muladd : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_muladd  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_muladd _ _ _ _ = ( ()  )\<close>
 

\<comment> \<open>\<open>val softfloat_f32_muladd : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_muladd  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_muladd _ _ _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_muladd : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_muladd  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_muladd _ _ _ _ = ( ()  )\<close>



\<comment> \<open>\<open>val softfloat_f16_sqrt : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_sqrt  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_sqrt _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_sqrt : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_sqrt  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_sqrt _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_sqrt : forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_sqrt  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_sqrt _ _ = ( ()  )\<close>



\<comment> \<open>\<open>val softfloat_f16_to_i32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_to_i32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_to_i32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f16_to_ui32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_to_ui32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_to_ui32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_i32_to_f16: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_i32_to_f16  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_i32_to_f16 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_ui32_to_f16: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_ui32_to_f16  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_ui32_to_f16 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f16_to_i64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_to_i64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_to_i64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f16_to_ui64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_to_ui64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_to_ui64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_i64_to_f16: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_i64_to_f16  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_i64_to_f16 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_ui64_to_f16: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_ui64_to_f16  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_ui64_to_f16 _ _ = ( ()  )\<close>



\<comment> \<open>\<open>val softfloat_f32_to_i32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_to_i32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_to_i32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_to_ui32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_to_ui32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_to_ui32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_i32_to_f32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_i32_to_f32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_i32_to_f32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_ui32_to_f32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_ui32_to_f32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_ui32_to_f32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_to_i64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_to_i64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_to_i64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_to_ui64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_to_ui64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_to_ui64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_i64_to_f32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_i64_to_f32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_i64_to_f32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_ui64_to_f32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_ui64_to_f32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_ui64_to_f32 _ _ = ( ()  )\<close>



\<comment> \<open>\<open>val softfloat_f64_to_i32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_to_i32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_to_i32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_to_ui32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_to_ui32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_to_ui32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_i32_to_f64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_i32_to_f64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_i32_to_f64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_ui32_to_f64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_ui32_to_f64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_ui32_to_f64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_to_i64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_to_i64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_to_i64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_to_ui64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_to_ui64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_to_ui64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_i64_to_f64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_i64_to_f64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_i64_to_f64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_ui64_to_f64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_ui64_to_f64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_ui64_to_f64 _ _ = ( ()  )\<close>



\<comment> \<open>\<open>val softfloat_f16_to_f32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_to_f32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_to_f32 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f16_to_f64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_to_f64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_to_f64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_to_f64: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_to_f64  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_to_f64 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_to_f16: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_to_f16  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_to_f16 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_to_f16: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_to_f16  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_to_f16 _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_to_f32: forall 'rm 's. Size 'rm, Size 's => bitvector 'rm -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_to_f32  :: \<open>('rm::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_to_f32 _ _ = ( ()  )\<close>



\<comment> \<open>\<open>val softfloat_f16_lt : forall 's. Size 's => bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_lt  :: \<open>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_lt _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f16_le : forall 's. Size 's => bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_le  :: \<open>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_le _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f16_eq : forall 's. Size 's => bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f16_eq  :: \<open>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f16_eq _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_lt : forall 's. Size 's => bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_lt  :: \<open>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_lt _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_le : forall 's. Size 's => bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_le  :: \<open>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_le _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f32_eq : forall 's. Size 's => bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f32_eq  :: \<open>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f32_eq _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_lt : forall 's. Size 's => bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_lt  :: \<open>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_lt _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_le : forall 's. Size 's => bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_le  :: \<open>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_le _ _ = ( ()  )\<close>


\<comment> \<open>\<open>val softfloat_f64_eq : forall 's. Size 's => bitvector 's -> bitvector 's -> unit\<close>\<close>
definition softfloat_f64_eq  :: \<open>('s::len)Word.word \<Rightarrow>('s::len)Word.word \<Rightarrow> unit \<close>  where 
     \<open> softfloat_f64_eq _ _ = ( ()  )\<close>

end
